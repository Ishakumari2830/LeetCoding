{"leetcode":{"easy":3,"hard":0,"medium":3,"shas":{"0094-binary-tree-inorder-traversal":{"0094-binary-tree-inorder-traversal.java":"4461398fa4fa235a6f7eb0383b716ed0bb93ddc4","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"ad2de4dc43b597ac715fd8000803d7972452f55a"},"0100-same-tree":{"0100-same-tree.java":"fb27fa8ad9ec14b10b27adb7af6e9c6a582d22e3","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"ac214aa8825849561aaa56bfc0f78fb4e9916247"},"0101-symmetric-tree":{"0101-symmetric-tree.java":"738161bad5d296205d67333d7dd6e959cf8118fd","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452"},"0102-binary-tree-level-order-traversal":{"0102-binary-tree-level-order-traversal.java":"8680574accb0f33598559fe6148b7a91646c65d4","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"01b65fdfcb1f1937ab9e22e5e3338d581c1423eb"},"0103-binary-tree-zigzag-level-order-traversal":{"0103-binary-tree-zigzag-level-order-traversal.java":"dcc41b28caf61977fabe6ef1f319ec18e7677575","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"001e9e36515bdae1f9aa997c13acebbc150b0f99"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.java":"feb7e2456a9c24167b05a60e859eedc59a569c5d","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0"},"0108-convert-sorted-array-to-binary-search-tree":{"0108-convert-sorted-array-to-binary-search-tree.java":"9b347873f10f0a914dd272356322c2940d728f31","README.md":"243a2859e66a71742146af16ea68ff0ab438a502"},"0110-balanced-binary-tree":{"0110-balanced-binary-tree.java":"7f1fd3bd8096a5d0bb2e4b69cd6d83a4c202f5e5","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"246a206e040480951d357edf72ae68c3fad93d0f"},"0111-minimum-depth-of-binary-tree":{"0111-minimum-depth-of-binary-tree.java":"277e5f3b34c093beb291050f2300bc56af369e2f","README.md":"ef874e714bbcb62cf96d64acfc0b679559ce9d2f"},"0112-path-sum":{"0112-path-sum.java":"e0697c7da1721845f3e355c3b7c7a50d29387dec","README.md":"138adf63fa7e184689c7e6232c30256aa5ede7b9"},"0124-binary-tree-maximum-path-sum":{"0124-binary-tree-maximum-path-sum.java":"334020e5a9c2312307c909110af1c2f2abc29f05","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"768e3d6e4904094ad610f9ab0e90e911e590b841"},"0144-binary-tree-preorder-traversal":{"0144-binary-tree-preorder-traversal.java":"01146ef64d9c982b550f049d6b77178a8361f278","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"320ded4b94d00b848b82ede567c689d5c20fbcd2"},"0145-binary-tree-postorder-traversal":{"0145-binary-tree-postorder-traversal.java":"93fc1b838afb189e9443a2015706fbfaae90b3c9","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"ed52ab8880f5649dbdc2f08203dab025b7190b89"},"0199-binary-tree-right-side-view":{"0199-binary-tree-right-side-view.java":"776850777a8f9516a91c4757b9216bd4e54a672f","README.md":"e0a0eb36c0588f971c130cf6210ba95d294a65d1"},"0222-count-complete-tree-nodes":{"0222-count-complete-tree-nodes.java":"8d99b871ff917c46b7ee9a477609313e1564eb21","README.md":"b5d031e0d7cc7a1abf0b398a1344396508c657c2"},"0226-invert-binary-tree":{"0226-invert-binary-tree.java":"d57a3c0235a5c86e9a1e0222d94aa478ff98125d","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8"},"0236-lowest-common-ancestor-of-a-binary-tree":{"0236-lowest-common-ancestor-of-a-binary-tree.java":"3f2afe8327e17db210e11cb0aa173c8d7d2ab842","README.md":"2e410057370d1340e00c05396cfa7ccd934457ff"},"0404-sum-of-left-leaves":{"0404-sum-of-left-leaves.java":"a0253f8c90bb6a1a4f6714da459759763c8bfc3c","README.md":"ac38605e80f3542e7c10c61df12ed09c0364fdfe"},"0501-find-mode-in-binary-search-tree":{"0501-find-mode-in-binary-search-tree.java":"ded1457ae9670bdd06d9c6b7dcdfef8c8c0c05fe","README.md":"8559039315b0315dda626c2d7fa1bb886100754f"},"0543-diameter-of-binary-tree":{"0543-diameter-of-binary-tree.java":"b77c6658d86d105f11a40966133e3676137b2856","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"26e6fc348979e60baa21a97e8208b9f9c50868ec"},"0633-sum-of-square-numbers":{"0633-sum-of-square-numbers.java":"059f37e2e2f3e9f1afb5f13e0248b0b9bc5f9898","NOTES.md":"38c1374a2cd8b577a6f9a8e3974f17247e98c9af","README.md":"efeadaa1f5579406c23d48bb6496ed88d324d31b"},"0662-maximum-width-of-binary-tree":{"0662-maximum-width-of-binary-tree.java":"54c237897ecacbf1b81c10f6a4bf0247ef81b991","README.md":"2619fced692af0b8f6e387761a072ab41d8b29e4"},"1114-binary-search-tree-to-greater-sum-tree":{"1114-binary-search-tree-to-greater-sum-tree.java":"a4becbd76401194ff66b357ee0cf626c4cdb196b","README.md":"4e8054fb20d86d51bcd02839c1511e2c5dffd5f3"},"1285-balance-a-binary-search-tree":{"1285-balance-a-binary-search-tree.java":"5ef5631b19998b721c5d17d5be50c513c8cff23d","README.md":"e4d27ec28c8891243fa4499b62e75b5772763f9a"},"1293-three-consecutive-odds":{"1293-three-consecutive-odds.java":"4206d2b86a0502ea29076ebfca89bbda5782e3c0","README.md":"98d26701a6a296df507d9b14e51cc37698d9862d","difficulty":"easy"},"1605-minimum-number-of-days-to-make-m-bouquets":{"1605-minimum-number-of-days-to-make-m-bouquets.java":"45568a7e86afde95b24886b5d4fe518e64ee307b","README.md":"75c38a40f6ce813940ad9ae8b3195467845dc49f"},"README.md":{"":"6530eb872f08c7d27abf0908c36245f70143c0cb"},"0350-intersection-of-two-arrays-ii":{"0350-intersection-of-two-arrays-ii.java":"c11a483903fd361234f7021df806cec9065c008c","README.md":"eb2513b2bde4a5418a904b4d0406e97a03df71e6","difficulty":"easy"},"stats.json":{"":"e74b5e3549e65594a79ecc5e7e50616b87741a90"},"1803-average-waiting-time":{"1803-average-waiting-time.java":"a2ff019620f1abf2c2c6a4db849c273bd4bbb612","README.md":"b51a67da8abc57eebdb978ca8db4f1447f8712d6","difficulty":"medium"},"1720-crawler-log-folder":{"1720-crawler-log-folder.java":"b4001710d2d084a8237015b1d0a8a52ce8bf816b","README.md":"390c89cfee12c40464961e53b5a0396dc4b735be","difficulty":"easy"},"1818-maximum-score-from-removing-substrings":{"1818-maximum-score-from-removing-substrings.java":"98466d3b6a6b14be94b59566b264afd30108b047","README.md":"a9d70da97f4622dc74511595d10eefde45849261","difficulty":"medium"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.java":"bbdeeb66cbd318629a9f626acc296678b136f677","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"}},"solved":6}}